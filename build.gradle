apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'
apply from: 'staticAnalysis.gradle'

buildscript {
    ext {
        springBootVersion = '2.1.3.RELEASE'
        swaggerVersion = '2.8.0'
        mapstructVersion = '1.2.0.Final'
        lombokVersion = '1.18.4'
        jacocoVersion = '0.2.0'
        aptVersion = '0.13'
        sonarVersion = '2.6.1'
        apacheCuratorVersion = '4.0.0'
    }


    repositories {

        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven {
            credentials {
                username "$nexusUsername"
                password "$nexusPassword"
            }
            url 'https://artifact.pohzn.com/repository/maven-public'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

        classpath("org.ajoberstar:gradle-jacoco:${jacocoVersion}")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarVersion}")
        classpath("net.ltgt.gradle:gradle-apt-plugin:${aptVersion}")
    }
}



test {
    exclude 'src/integration-test/**'
}

compileJava.options.encoding = 'UTF-8'
version = project.hasProperty('projVersion') ? project['projVersion'] : '0.0.1'
group = project.hasProperty('projGroup') ? project['projGroup'] : 'com.pol.hngt'
archivesBaseName = project.hasProperty('projName') ? project['projName'] : 'example-spring-boot'

sourceCompatibility = 1.8

sonarqube {
    properties {
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    }
}

repositories {
    maven { url 'http://splunk.jfrog.io/splunk/ext-releases-local' }
            mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven {
            credentials {
                username "$nexusUsername"
                password "$nexusPassword"
            }
            url 'https://artifact.pohzn.com/repository/maven-public'
        }
}

configurations {
}

dependencies {

    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.9.4'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.7'
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    compile 'com.google.code.gson:gson:2.8.2'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "${springBootVersion}"

    //prometheus
    compile group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.2.0'





}


task getJarArchivePath {
    doLast {
        println jar.archivePath
    }
}

task getAppName {
    doLast {
        println project.name
    }
}

bootRun {
    systemProperties System.properties
}
//
